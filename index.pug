doctype html
html(lang="en")
  head
    //- Required meta tags
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no")

    //- TODO: Add favicon
    //- TODO: Add analytics
    //- TODO: Add error handling
    title real-estate-layout-tool

    //- https://getbootstrap.com/docs/4.1/getting-started/download/
    link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css", integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO", crossorigin="anonymous")

    //- Build our stylesheet
    link(rel="stylesheet", href="main.css")

    //- Load in our JS dependencies
    //- https://reactjs.org/docs/cdn-links.html
    if process.env.ENV === 'production'
      <script crossorigin src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
      <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
    else
      <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
      <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
  body
    #react-content: .container: .row: .col-12: strong Loading...
    hr(style="border-bottom: 2px solid black")
    .container
      .row: .col-12
        h1 real-estate-layout-tool
        p We'll create a blueprint layout with grouped images, at up to 10 locations, in 3 steps
        //- ol
        //-   li Upload and categorize image with location
        //-   li Upload blueprint image from external tool
        //-   li Associate locations with blueprint image
        p
          .progress(style="height: 1.5rem;")
            .progress-bar(role="progressbar", style="width: 33%;") 1 - Categorize images
            //- TODO: Build better `.muted` for progressbar
            .progress-bar(role="progressbar", style="width: 33%; background-color: transparent; color: black; opacity: 40%") 2 - Upload blueprint
            .progress-bar(role="progressbar", style="width: 34%; background-color: transparent; color: black; opacity: 40%") 3 - Assocate blueprint
      .row: .col-12
        h3 Associate uploaded images with locations
      .row: .col-12
        .row.mb-3
          for location, i in ['Room 1', 'Room 2', 'Room 3', 'Room 4', 'Hallway']
            - human_i = i + 1
            .col-2
              .input-group
                  .input-group-prepend: span.input-group-text(class=`category-${human_i}-bg`)= human_i
                  input.form-control(type="text", value=location, aria-label=`Location name ${human_i}`)
        .row.mb-3
          for location, i in ['Kitchen', 'Bathroom', '', '', '']
            - human_i = (i + 6) % 10
            .col-2
              .input-group
                  .input-group-prepend: span.input-group-text(class=`category-${human_i}-bg`)= human_i
                  input.form-control(type="text", value=location, aria-label=`Location name ${human_i}`)
      .row: .col-6
        div Type location number to categorize image
        p
          //- TODO: Allow pressing actual number part of "prepend" -- updated text would read "Type or press"
          //- TODO: Use dynamic image location
          img.img-fluid(src="big-photos/0.jpg", alt="Actively selected photo")

        p
          = "or "
          //- TODO: Bind button as well as shortcut
          button.btn skip to next image
          span.text-muted= " (shortcut: s)"
      .row
        //- TODO: Use dynamic numbering and image location
        each _, i in Array(44)
          .col-1.mb-1
            - let imgName = `big-photos/${i}.jpg`;
            //- TODO: Use dynamic numbering and categorization
            //- DEV: We use a `div` as `::before` doesn't seem to work great with `img`
            div(class={
              'selected-image': i === 0,

              'category-img': [3, 5, 7, 20].includes(i),
              'category-1-img': i === 3,
              'category-2-img': i === 5,
              'category-3-img': i === 7,
              'category-4-img': i === 20,
            })
              img.img-fluid(src=imgName, alt=`Photo ${i} thumbnail`)
      .row: .col-12
        .text-right
          p
            button.btn.btn-primary Continue
            br
            //- TOOD: Use dynamic image
            em.text-muted.small Uncategorized images (40) will be omitted

    //- RUn our main JS after all content loaded
    script(src="main.js")
